services:
  db:
    image: postgres:16
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
    env_file: .env.docker.production

  redis:
    image: redis:6.2-alpine

  web:
    build: { context: ., args: { ENVIRONMENT: production } }
    volumes:
      - staticfiles_volume:/app/staticfiles
    ports: ["9000:9000"]
    env_file: .env.docker.production
    depends_on: [ redis ]

  worker:
      build: { context: ., args: { ENVIRONMENT: production } }
      entrypoint: ["sh", "-c"]
      command:
        - mkdir -p /app/logs && exec poetry run celery -A config worker --loglevel=info
      env_file: .env.docker.production
      depends_on: [ redis ]
      stop_grace_period: 60s

  beat:
    build: { context: ., args: { ENVIRONMENT: production } }
    entrypoint: ["sh", "-c"]
    command:
      - mkdir -p /app/logs /app/run &&  exec poetry run celery -A config beat --loglevel=info --schedule="$CELERY_BEAT_SCHEDULE_FILE"
    env_file: .env.docker.production
    depends_on: [ redis ]
    stop_grace_period: 60s

volumes:
  postgres_data:
  staticfiles_volume: